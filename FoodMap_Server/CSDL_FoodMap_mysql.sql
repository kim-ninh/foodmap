
CREATE TABLE ACCOUNT
(
	USERNAME VARCHAR(20) PRIMARY KEY,
	PASSWORD VARCHAR(20),
	NAME VARCHAR(40) CHARSET utf8,
	PHONE_NUMBER VARCHAR(11),
	EMAIL VARCHAR(20) UNIQUE
);

CREATE TABLE GUESTACCOUNT
(
	EMAIL VARCHAR(30) PRIMARY KEY,
	NAME VARCHAR(40) CHARSET utf8
);

CREATE TABLE RESTAURANT
(
	ID INT AUTO_INCREMENT PRIMARY KEY,
	ID_USER VARCHAR(20),
	NAME VARCHAR(100) CHARSET utf8 NOT NULL,
	ADDRESS VARCHAR(50) CHARSET utf8 NOT NULL,
	PHONE_NUMBER VARCHAR(11),
	DESCRIBE_TEXT TEXT,
	URL_IMAGE VARCHAR(200) CHARSET utf8, -- LINK IMAGE
	TIMEOPEN TIME NOT NULL,
	TIMECLOSE TIME NOT NULL
);

CREATE TABLE LOCATION
(
	ID_REST INT NOT NULL,
	LAT FLOAT NOT NULL, -- latitude
	LON FLOAT NOT NULL,	-- longitude
	PRIMARY KEY(LAT, LON)
);

CREATE TABLE DISH
(
	NAME VARCHAR(50) CHARSET utf8 NOT NULL,
	ID_REST INT,
	PRICE INT,
	URL_IMAGE VARCHAR(200) CHARSET utf8, -- LINK IMAGE
	ID_CATALOG INT,
	PRIMARY KEY(NAME, ID_REST)
);

CREATE TABLE CATALOGS
(
	ID INT AUTO_INCREMENT PRIMARY KEY,
	NAME VARCHAR(30) CHARSET utf8 UNIQUE NOT NULL
);

CREATE TABLE TAGS
(
	ID_REST INT,
	ID_CATALOG INT,
	PRIMARY KEY(ID_REST, ID_CATALOG)
);

CREATE TABLE COMMENTS
(
	DATE_TIME DATE NOT NULL, -- ngày comment
	ID_REST INT NOT NULL,
	GUEST_EMAIL VARCHAR(30) NULL, -- người dùng bình thường
	OWNER_EMAIL VARCHAR(20) NULL, -- là chủ quán ăn comment
	COMMENT NVARCHAR(200) NOT NULL,
	PRIMARY KEY (DATE_TIME, ID_REST)
);

CREATE TABLE RANK
(
	ID_REST INT NOT NULL,
	EMAIL_USER VARCHAR(30),
	STAR INT NOT NULL, -- 1 tới 5
	PRIMARY KEY(ID_REST, EMAIL_USER)
);

-- SET FOREIGN KEY
ALTER TABLE RESTAURANT ADD CONSTRAINT FK_RESTAURANT_ACCOUNT FOREIGN KEY(ID_USER) REFERENCES ACCOUNT(USERNAME);

ALTER TABLE DISH ADD CONSTRAINT FK_DISH_RESTAURANT FOREIGN KEY(ID_REST) REFERENCES RESTAURANT(ID);

ALTER TABLE DISH ADD CONSTRAINT FK_DISH_CATALOGS FOREIGN KEY(ID_CATALOG) REFERENCES CATALOGS(ID);


ALTER TABLE TAGS ADD CONSTRAINT FK_TAGS_RESTAURANT FOREIGN KEY(ID_REST) REFERENCES RESTAURANT(ID);


ALTER TABLE TAGS ADD CONSTRAINT FK_TAGS_CATALOGS FOREIGN KEY(ID_CATALOG) REFERENCES CATALOGS(ID);


ALTER TABLE COMMENTS ADD CONSTRAINT FK_COMMENTS_RESTAURANT FOREIGN KEY(ID_REST) REFERENCES RESTAURANT(ID);


ALTER TABLE COMMENTS ADD CONSTRAINT FK_COMMENTS_GUESTACCOUNT FOREIGN KEY(GUEST_EMAIL) REFERENCES GUESTACCOUNT(EMAIL);


ALTER TABLE COMMENTS ADD CONSTRAINT FK_COMMENTS_ACCOUNT FOREIGN KEY(OWNER_EMAIL) REFERENCES ACCOUNT(EMAIL);


ALTER TABLE RANK ADD CONSTRAINT FK_RANK_RESTAURANT FOREIGN KEY(ID_REST) REFERENCES RESTAURANT(ID);


ALTER TABLE RANK ADD CONSTRAINT FK_RANK_GUESTACCOUNT FOREIGN KEY(EMAIL_USER) REFERENCES GUESTACCOUNT(EMAIL);


ALTER TABLE LOCATION ADD CONSTRAINT FK_LOCATION_RESTAURANT FOREIGN KEY(ID_REST) REFERENCES RESTAURANT(ID);


-- SET RULES
ALTER TABLE ACCOUNT ADD CONSTRAINT C_ACCOUNT_PHONENUMBER CHECK(LEN(PHONE_NUMBER) IN (10,11));


ALTER TABLE RESTAURANT ADD CONSTRAINT C_RESTAURANT_PHONENUMBER CHECK(LEN(PHONE_NUMBER) IN (10,11));


ALTER TABLE RANK ADD CONSTRAINT C_RANK_STAR CHECK(STAR >= 1 AND STAR <= 5);



DELIMITER //
CREATE PROCEDURE LOGIN (IN USERNAME VARCHAR(20) , IN PASS VARCHAR(20))
BEGIN
	SELECT * FROM ACCOUNT AC WHERE AC.USERNAME = USERNAME AND AC.PASSWORD = PASS;
END //
DELIMITER ;

